properties([
    parameters ([
        
        booleanParam(name: 'CLEAN_WORKSPACE', defaultValue: true, description: 'Clean the workspace at the end of the run')
    ]),
    pipelineTriggers([
            [$class: "GitHubPushTrigger"]
    ]),
    [$class: 'GithubProjectProperty', displayName: '', projectUrlStr: 'https://github.com/ossimlabs/omar-builder'],
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '20')),
    disableConcurrentBuilds()
])
podTemplate(
  containers: [
    containerTemplate(
      name: 'docker',
      image: 'docker:latest',
      ttyEnabled: true,
      command: 'cat',
      privileged: true
    )
  ],
  volumes: [
    hostPathVolume(
      hostPath: '/var/run/docker.sock',
      mountPath: '/var/run/docker.sock'
    ),
  ]
)

{

node(POD_LABEL){
    stage("Load Variables"){
      dir("ossim-ci"){
        git branch: "${OSSIM_GIT_BRANCH}", 
        url: "${GIT_PRIVATE_SERVER_URL}/ossim-ci.git", 
        credentialsId: "${CREDENTIALS_ID}"
     }

      load "ossim-ci/jenkins/variables/common-variables.groovy"
      load "ossim-ci/jenkins/variables/kakadu-build-variables.groovy"
    }

    try {
        stage("Checkout") {
          dir("${env.WORKSPACE}/ossim-private"){
            git branch: "${OSSIM_GIT_BRANCH}",
            url: "${GIT_PRIVATE_SERVER_URL}/ossim-private.git",
            credentialsId: "${CREDENTIALS_ID}"
          }
        }

        stage("Build") {
          dir("${env.WORKSPACE}"){
            sh """
                mkdir -p ${env.WORKSPACE}/ossim-private/kakadu/${env.KAKADU_VERSION}/bin/Linux-x86-64-gcc
                pushd ${env.WORKSPACE}/ossim-private/kakadu/${env.KAKADU_VERSION}/coresys/make
                make -f Makefile-Linux-x86-64-gcc
                popd
                pushd ${env.WORKSPACE}/ossim-private/kakadu/${env.KAKADU_VERSION}/apps/make
                make -f Makefile-Linux-x86-64-gcc
                popd
                pushd ${env.WORKSPACE}/ossim-private/kakadu/${env.KAKADU_VERSION}/managed/make
                make -f Makefile-Linux-x86-64-gcc
                popd
                rm -rf ${env.WORKSPACE}/kakadu-${env.KAKADU_VERSION}
                pushd ${env.WORKSPACE}/ossim-private/kakadu
                cp -R ${env.KAKADU_VERSION} ${env.WORKSPACE}/kakadu-${env.KAKADU_VERSION}
                popd
            """
          }
        }

        stage("Archive") {
          dir("${env.WORKSPACE}"){
            sh "tar cvfz kakadu.tgz kakadu-${env.KAKADU_VERSION}"
            archiveArtifacts 'kakadu.tgz'
          }
        }
    }
    catch(e) {
        println e
    }
  
    stage("Clean Workspace")
    {
        if ("${CLEAN_WORKSPACE}" == "true")
          step([$class: 'WsCleanup'])
    }
}
